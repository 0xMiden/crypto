[package]
authors.workspace      = true
categories.workspace   = true
description            = "Miden Cryptographic primitives"
documentation          = "https://docs.rs/miden-crypto/0.18.0"
edition.workspace      = true
keywords.workspace     = true
license.workspace      = true
name                   = "miden-crypto"
readme                 = "../README.md"
repository.workspace   = true
rust-version.workspace = true
version                = "0.18.0"

[[bin]]
bench             = false
doctest           = false
name              = "miden-crypto"
path              = "src/main.rs"
required-features = ["executable"]

[[bench]]
harness = false
name    = "encryption"

[[bench]]
harness = false
name    = "hash"

[[bench]]
harness           = false
name              = "smt"
required-features = ["internal"]

[[bench]]
harness = false
name    = "merkle"

[[bench]]
harness           = false
name              = "large-smt"
required-features = ["rocksdb"]

[[bench]]
harness = false
name    = "store"

[[bench]]
harness = false
name    = "dsa"

[[bench]]
harness = false
name    = "word"

[[bench]]
harness = false
name    = "rand"

[features]
concurrent = ["dep:rayon", "hashbrown?/rayon"]
default    = ["concurrent", "std"]
executable = ["dep:clap", "dep:rand-utils", "std"]
hashmaps   = ["dep:hashbrown"]
internal   = []
rocksdb    = ["concurrent", "dep:rocksdb"]
serde      = ["dep:serde", "serde?/alloc"]
std        = ["blake3/std", "dep:cc", "rand/std", "rand/thread_rng", "winter-crypto/std", "winter-utils/std"]

[dependencies]
blake3           = { default-features = false, version = "1.8" }
chacha20poly1305 = { features = ["alloc", "stream"], version = "0.10" }
clap             = { features = ["derive"], optional = true, version = "4.5" }
ed25519-dalek    = { features = ["zeroize"], version = "2" }
flume            = { version = "0.11" }
getrandom        = { features = ["js"], version = "0.2" }
hashbrown        = { features = ["serde"], optional = true, version = "0.15" }
hkdf             = { default-features = false, version = "0.12" }
k256             = { features = ["ecdh", "ecdsa"], version = "0.13" }
num              = { default-features = false, features = ["alloc", "libm"], version = "0.4" }
num-complex      = { default-features = false, version = "0.4" }
rand             = { default-features = false, version = "0.9" }
rand-utils       = { optional = true, package = "winter-rand-utils", version = "0.13" }
rand_chacha      = { default-features = false, version = "0.9" }
rand_core        = { default-features = false, version = "0.9" }
rand_hc          = { version = "0.3" }
rayon            = { optional = true, version = "1.10" }
rocksdb          = { default-features = false, features = ["lz4"], optional = true, version = "0.23" }
serde            = { default-features = false, features = ["derive"], optional = true, version = "1.0" }
sha3             = { default-features = false, version = "0.10" }
thiserror        = { default-features = false, version = "2.0" }
winter-crypto    = { default-features = false, version = "0.13" }
winter-utils     = { default-features = false, version = "0.13" }
x25519-dalek     = { default-features = false, features = ["static_secrets"], version = "2.0" }
zeroize          = { default-features = false, version = "1.8" }

# FIXME: switch to release version of plonky3 once the changes are upstreamed
# p3-field = { version = "0.3.0" }
# p3-goldilocks = { version = "0.3.0" }
# p3-symmetric = { version = "0.3.0" }
# p3-merkle-tree = { version = "0.3.0" }
# p3-air = { version = "0.3.0" }
# p3-challenger = { version = "0.3.0" }

# FIXME: switch to main branch once zz/migrate-plonky3 is merged
p3-air        = { branch = "zz/migrate-plonky3", default-features = false, git = "https://github.com/0xMiden/Plonky3/" }
p3-challenger = { branch = "zz/migrate-plonky3", default-features = false, git = "https://github.com/0xMiden/Plonky3/" }
p3-field      = { branch = "zz/migrate-plonky3", default-features = false, git = "https://github.com/0xMiden/Plonky3/" }
p3-goldilocks = { branch = "zz/migrate-plonky3", default-features = false, git = "https://github.com/0xMiden/Plonky3/" }
p3-symmetric  = { branch = "zz/migrate-plonky3", default-features = false, git = "https://github.com/0xMiden/Plonky3/" }

[dev-dependencies]
assert_matches = { default-features = false, version = "1.5" }
criterion      = { features = ["html_reports"], version = "0.7" }
hex            = { default-features = false, features = ["alloc"], version = "0.4" }
itertools      = { version = "0.14" }
proptest       = { default-features = false, features = ["alloc"], version = "1.7" }
rand-utils     = { package = "winter-rand-utils", version = "0.13" }
rand_chacha    = { default-features = false, version = "0.9" }
rstest         = { version = "0.26" }
seq-macro      = { version = "0.3" }
tempfile       = { version = "3.20" }

[build-dependencies]
cc   = { features = ["parallel"], optional = true, version = "1.2" }
glob = "0.3"

[lints]
workspace = true

[package.metadata.cargo-machete]
ignored = ["getrandom"]

[[test]]
name              = "rocksdb_large_smt"
required-features = ["concurrent", "rocksdb"]
